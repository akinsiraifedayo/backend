name: Production Deployment

on:
  push:
    branches: [main]

jobs:
  prepare:
    runs-on: self-hosted
    outputs:
      commit_sha: ${{ steps.sha.outputs.commit_sha }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Get commit SHA
        id: sha
        run: |
          echo "commit_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  build:
    needs: prepare
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ${{ vars.DOCKERHUB_USERNAME }}/bankapp:latest
            ${{ vars.DOCKERHUB_USERNAME }}/bankapp:sha-${{ needs.prepare.outputs.commit_sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    

    
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check if docker-compose.yaml changed
        id: check_changes
        run: |
          if git diff --quiet HEAD^ HEAD -- docker-compose.yaml; then
            echo "docker-compose.yaml unchanged"
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "docker-compose.yaml changed"
            echo "changed=true" >> $GITHUB_OUTPUT
          fi
      
      - name: Copy docker-compose.yaml to server (if changed)
        if: steps.check_changes.outputs.changed == 'true'
        uses: appleboy/scp-action@v1.0.0
        with:
          host: ${{ secrets.SSH_SERVER_HOST }}
          username: ${{ secrets.SSH_SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.yaml"
          target: "~/backend/"

      - name: Deploy to Production
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_SERVER_HOST }}
          username: ${{ secrets.SSH_SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            set -euxo pipefail
            cd ~/backend
            
            # Deploy containers
            docker compose -f docker-compose.yaml pull
            docker compose -f docker-compose.yaml up -d \
              --force-recreate \
              --remove-orphans
            
            # Verify deployment
            docker ps --filter "name=bankapp" | grep -q "Up" || exit 1
            docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}"
            
            # Cleanup old images
            docker image prune -af --filter "until=24h"