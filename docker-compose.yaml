services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    command:
      
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: >
        bash -c 
        "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    image: djangowiz/bankapp:latest
    container_name: bankapp
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql+asyncpg://myuser:${DB_PASSWORD}@db:5432/mydatabase
      TEST_DATABASE_URL: postgresql+asyncpg://testuser:password@db:5432/testdatabase
    volumes:
      - /etc/ssl/certs/private/:/etc/ssl/certs/private/
    restart: unless-stopped

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: https://api.siteownr.com
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx.conf:/etc/nginx/nginx.conf
      - /etc/ssl/certs/private/:/etc/ssl/certs/private/
    depends_on:
      - backend
      - frontend
    restart: unless-stopped


volumes:
  postgres_data:




  